env:
    CIRRUS_CLONE_DEPTH: 1
    BUILD_HOSTNAME: "cirrus-ci.org"
    
task:
  name: "Test"
  timeout_in: 120m
  container:
      image: apon77/aosp:cirrus
      cpu: 8
      memory: 32G
      stateful: true
      greedy: true
      volumes:
          - /home/cirrus/roms:/home/cirrus/roms
          - /home/cirrus/ccache:/home/cirrus/ccache
          - /home/cirrus/.config:/home/cirrus/.config
show_script:
    - cat $CIRRUS_WORKING_DIR/build_rom.sh
sync_script:
    - set -e
    - rom_name=Nusa
    - mkdir -p ~/roms/$rom_name
    - cd ~/roms/$rom_name
    - rm -rf .repo/local_manifests
    - command=$(head $CIRRUS_WORKING_DIR/build_rom.sh -n $(expr $(grep 'build/envsetup.sh' $CIRRUS_WORKING_DIR/build_rom.sh -n | cut -f1 -d:) - 1))
    - only_sync=$(grep 'repo sync' $CIRRUS_WORKING_DIR/build_rom.sh)
    - bash -c "$command" || true
    
build_script:
    - set -e
    - rom_name=Nusa
    - device=$(grep unch $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d ' ' -f 2 | cut -d _ -f 2 | cut -d - -f 1)
    - grep _jasmine_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=jasmine_sprout
    - grep _laurel_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=laurel_sprout
    - grep _GM8_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=GM8_sprout
    - grep _maple_dsds $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=maple_dsds
    - cd ~/roms/$rom_name
    - export CCACHE_DIR=~/ccache/$rom_name/$device
    - export CCACHE_EXEC=$(which ccache)
    - export USE_CCACHE=1
    - ccache -M 8G
    - ccache -z
    - ls device/*/*/vendorsetup.sh | grep -v generic && echo "Please remove vendorsetup.sh file from device tree, use local manifest for cloning and removing repositories." && exit 1 || true
    - command=$(tail $CIRRUS_WORKING_DIR/build_rom.sh -n +$(expr $(grep 'build/envsetup.sh' $CIRRUS_WORKING_DIR/build_rom.sh -n | cut -f1 -d:) - 1)| head -n -1 | grep -v 'rclone copy')
    - bash -c "$command"
    
ccache_stats_script:
    - set -e
    - rom_name=Nusa
    - device=$(grep unch $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d ' ' -f 2 | cut -d _ -f 2 | cut -d - -f 1)
    - grep _jasmine_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=jasmine_sprout
    - grep _laurel_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=laurel_sprout
    - grep _GM8_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=GM8_sprout
    - grep _maple_dsds $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=maple_dsds
    - export CCACHE_DIR=~/ccache/$rom_name/$device
    - ccache -s
    
upload_script:
    - set -e
    - rom_name=Nusa
    - device=$(grep unch $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d ' ' -f 2 | cut -d _ -f 2 | cut -d - -f 1)
    - grep _jasmine_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=jasmine_sprout
    - grep _laurel_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=laurel_sprout
    - grep _GM8_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=GM8_sprout
    - grep _maple_dsds $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=maple_dsds
    - cd ~/roms/$rom_name
    - engzip=$(ls out/target/product/$device/*-eng*.zip | grep -v "retrofit" || true)
    - otazip=$(ls out/target/product/$device/*-ota-*.zip | grep -v "hentai" | grep -v "evolution" || true)
    - awaken=$(ls out/target/product/$device/Project-Awaken*.zip || true)
    - octavi=$(ls out/target/product/$device/OctaviOS-R*.zip || true)
    - p404=$(ls out/target/product/$device/?.*zip || true)
    - cipher=$(ls out/target/product/$device/CipherOS-*-OTA-*.zip || true)
    - rm -rf $engzip $otazip $awaken $octavi $p404 $cipher
    - dlink=$(basename out/target/product/$device/*.zip)
    - #command=$(grep 'rclone copy' $CIRRUS_WORKING_DIR/build_rom.sh)
    - #if [[ $device == jasmine_sprout ]]; then command="rclone copy out/target/product/jasmine_sprout/*zip cirrus:jasmine_sprout -P"; fi
    - #if [[ $device == laurel_sprout ]]; then command="rclone copy out/target/product/laurel_sprout/*zip cirrus:laurel_sprout -P"; fi
    - #if [[ $device == GM8_sprout ]]; then command="rclone copy out/target/product/GM8_sprout/*zip cirrus:GM8_sprout -P"; fi
    - #if [[ $device == maple_dsds ]]; then command="rclone copy out/target/product/maple_dsds/*zip cirrus:maple_dsds -P"; fi
    - #bash -c "$command"
    - #echo "Download link https://roms.cirrus-ci.workers.dev/0:/$device/$dlink"
    - unzip -P $one -q ~/.config/1.zip -d ~
    - file=out/target/product/$device/*.zip
    - rsync -vhcP $file -e "ssh -o Compression=no" apon77@frs.sourceforge.net:/home/frs/project/rom-builders/$device/
    - echo "Download link https://sourceforge.net/projects/rom-builders/files/$device/$dlink/download"
  remove_script:
    - set -e
    - rom_name=Nusa
    - device=$(grep unch $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d ' ' -f 2 | cut -d _ -f 2 | cut -d - -f 1)
    - grep _jasmine_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=jasmine_sprout
    - grep _laurel_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=laurel_sprout
    - grep _GM8_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=GM8_sprout
    - grep _maple_dsds $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=maple_dsds
    - cd ~/roms/$rom_name
    - rm -rf out/target/product/$device
